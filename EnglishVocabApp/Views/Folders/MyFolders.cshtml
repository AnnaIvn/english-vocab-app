@using Humanizer.Localisation
@using Microsoft.AspNetCore.Mvc.Localization

@model EnglishVocabApp.Models.PaginateList<Folder, EnglishVocabApp.ViewModels.FolderViewModel>

@using System.Security.Claims

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = @Localizer["lblTitleMyFoldersFold"];
}

<h2>@Localizer["lblTitleMyFoldersFold"]</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().IsPrivate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var folder in Model)
        {
            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            bool isOwner = folder.UserId == userId;

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => folder.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => folder.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => folder.IsPrivate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => folder.User.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => folder.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => folder.UpdatedAt)
                </td>
                <td>
                    <button class="btn btn-info btn-sm" onclick="addEntity('/Folders/Details/@folder.Id')">
                        @Localizer["lblDetailsAboutFolder"]
                    </button> |

                    @if (isOwner)
                    {
                        <button class="btn btn-warning btn-sm" onclick="addEntity('/Folders/Edit/@folder.Id')">
                            @Localizer["lblEditFolder"]
                        </button>
                    }

                    <form asp-action="RemoveFolder" asp-controller="Folders" method="post" style="display:inline;">
                        <input type="hidden" name="folderId" value="@folder.Id" />
                        <button type="submit" class="btn btn-sm @(isOwner ? "btn-danger" : "btn-warning")">
                            @(isOwner ? @Localizer["lblDeleteThisFolder"] : @Localizer["lblRemoveFromTheListFolder"])
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<label for="FolderPages">
    @Localizer["lblCurrentPageFolder", Model.PageIndex, Model.TotalPages]
</label>
<div id="FolderPages">
    <a class="btn btn-success @(Model.HasPreviousPage ? "" : "disabled")"
       href="/Folders/MyFolders?pageIndex=@(Model.PageIndex - 1)">
        @Localizer["lblPreviousFolder"]
    </a>

    <a class="btn btn-success @(Model.HasNextPage ? "" : "disabled")"
       href="/Folders/MyFolders?pageIndex=@(Model.PageIndex + 1)">
        @Localizer["lblNextFolder"]
    </a>
</div>