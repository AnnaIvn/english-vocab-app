@model EnglishVocabApp.Models.Word

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Word Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Transcript)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Transcript)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Meaning)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Meaning)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Examples)
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrWhiteSpace(Model.ExamplesString))
            {
                @Html.Raw("- " + Model.ExamplesString.Replace(";", "<br>- "))
            }
            else
            {
                <text>None</text>
            }
        </dd>

        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Synonyms)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SynonymsString)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Antonyms)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AntonymsString)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Type.Name)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
