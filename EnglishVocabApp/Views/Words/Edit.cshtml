@model EnglishVocabApp.ViewModels.WordViewModel
@* @model EnglishVocabApp.Models.Word *@

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Word</h2>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" onsubmit="updateHiddenFields()">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Name" class="control-label">Name of the word:</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TypeName" class="control-label">Type/Class of the word:</label>
                <select asp-for="TypeName" class="form-control">
                    <option value="">Select a type</option>
                    @foreach (var type in ViewBag.WordTypes as List<string>)
                    {
                        <option value="@type">@type</option>
                    }
                </select>
                <span asp-validation-for="TypeName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Transcript" class="control-label">Transcript of the word:</label>
                <input asp-for="Transcript" class="form-control" />
                <span asp-validation-for="Transcript" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Meaning" class="control-label">Meaning of the word:</label>
                <input asp-for="Meaning" class="form-control" />
                <span asp-validation-for="Meaning" class="text-danger"></span>
            </div>

            <!-- Examples -->
            <div class="form-group">
                <label>Examples:</label>
                <ul id="examplesList">
                    @foreach (var example in Model.Examples)
                    {
                        <li>@example <button type="button" onclick="removeExample('@example')">x</button></li>
                    }
                </ul>
                <input type="text" id="newExample" class="form-control" placeholder="Add an example" />
                <button type="button" class="btn btn-secondary mt-2" onclick="addExample()">Add</button>
                <input type="hidden" asp-for="ExamplesString" id="examplesInput" />
            </div>

            <!-- Synonyms -->
            <div class="form-group">
                <label>Synonyms:</label>
                <ul id="synonymsList">
                    @foreach (var synonym in Model.Synonyms)
                    {
                        <li>@synonym <button type="button" onclick="removeSynonym('@synonym')">x</button></li>
                    }
                </ul>
                <input type="text" id="newSynonym" class="form-control" placeholder="Add a synonym" />
                <button type="button" class="btn btn-secondary mt-2" onclick="addSynonym()">Add</button>
                <input type="hidden" asp-for="SynonymsString" id="synonymsInput" />
            </div>

            <!-- Antonyms -->
            <div class="form-group">
                <label>Antonyms:</label>
                <ul id="antonymsList">
                    @foreach (var antonym in Model.Antonyms)
                    {
                        <li>@antonym <button type="button" onclick="removeAntonym('@antonym')">x</button></li>
                    }
                </ul>
                <input type="text" id="newAntonym" class="form-control" placeholder="Add an antonym" />
                <button type="button" class="btn btn-secondary mt-2" onclick="addAntonym()">Add</button>
                <input type="hidden" asp-for="AntonymsString" id="antonymsInput" />
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Save" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let examples = @Html.Raw(Json.Serialize(Model.Examples));
        let synonyms = @Html.Raw(Json.Serialize(Model.Synonyms));
        let antonyms = @Html.Raw(Json.Serialize(Model.Antonyms));

        function addExample() {
            let value = document.getElementById("newExample").value;
            if (value.trim()) {
                examples.push(value);
                updateExamplesList();
                document.getElementById("newExample").value = "";
            }
        }

        function removeExample(value) {
            examples = examples.filter(item => item !== value);
            updateExamplesList();
        }

        function updateExamplesList() {
            document.getElementById("examplesList").innerHTML = examples.map(item =>
                `<li>${item} <button type="button" onclick="removeExample('${item}')">x</button></li>`
            ).join("");
            document.getElementById("examplesInput").value = examples.join(";");
        }

        function addSynonym() {
            let value = document.getElementById("newSynonym").value;
            if (value.trim()) {
                synonyms.push(value);
                updateSynonymsList();
                document.getElementById("newSynonym").value = "";
            }
        }

        function removeSynonym(value) {
            synonyms = synonyms.filter(item => item !== value);
            updateSynonymsList();
        }

        function updateSynonymsList() {
            document.getElementById("synonymsList").innerHTML = synonyms.map(item =>
                `<li>${item} <button type="button" onclick="removeSynonym('${item}')">x</button></li>`
            ).join("");
            document.getElementById("synonymsInput").value = synonyms.join(", ");
        }

        function addAntonym() {
            let value = document.getElementById("newAntonym").value;
            if (value.trim()) {
                antonyms.push(value);
                updateAntonymsList();
                document.getElementById("newAntonym").value = "";
            }
        }

        function removeAntonym(value) {
            antonyms = antonyms.filter(item => item !== value);
            updateAntonymsList();
        }

        function updateAntonymsList() {
            document.getElementById("antonymsList").innerHTML = antonyms.map(item =>
                `<li>${item} <button type="button" onclick="removeAntonym('${item}')">x</button></li>`
            ).join("");
            document.getElementById("antonymsInput").value = antonyms.join(", ");
        }

        function updateHiddenFields() {
            document.getElementById("examplesInput").value = examples.join(";");
            document.getElementById("synonymsInput").value = synonyms.join(", ");
            document.getElementById("antonymsInput").value = antonyms.join(", ");
        }
    </script>
}
