@model IEnumerable<EnglishVocabApp.Models.Word>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>List of all words</h1>

<p>
    <a asp-action="Create">Add new word</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParam">
                    @Html.DisplayNameFor(model => model.Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Transcript)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.TypeSortParam">
                    @Html.DisplayNameFor(model => model.Type)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Meaning)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Examples)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Synonyms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Antonyms)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Transcript)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Meaning)
                </td>
                <td>
                    @(item.ExamplesString != null ? string.Join(". ", item.ExamplesString) : "None")
                </td>
                <td>
                    @(item.SynonymsString != null ? string.Join(", ", item.SynonymsString) : "None")
                </td>
                <td>
                    @(item.AntonymsString != null ? string.Join(", ", item.AntonymsString) : "None")
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
